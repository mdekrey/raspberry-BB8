syntax = "proto3";

option csharp_namespace = "BB8.Services";

package robo_diag;

service RoboDiagnostics {
  rpc GetController (EmptyRequest) returns (stream ControllerReply);
  rpc GetMotorState (EmptyRequest) returns (stream MotorStateReply);
  rpc GetGpioConfiguration (EmptyRequest) returns (GpioConfigurationReply);
  rpc GetGpioState (EmptyRequest) returns (stream GpioStateReply);
  rpc GetUnitConfiguration (EmptyRequest) returns (stream UnitConfigurationReply);
  rpc GetMotionConfiguration (EmptyRequest) returns (stream MotionConfigurationMessage);
  rpc SetMotionConfiguration (MotionConfigurationMessage) returns (MotionConfigurationMessage);
}

message EmptyRequest {
}

message ControllerReply {
  string name = 1;
  map<string, bool> buttons = 2;
  map<string, double> axes = 3;
}

message MotorStateReply {
	repeated MotorState motors = 1;
}
message MotorState {
	enum MotorDirection {
		STOPPED = 0;
        FORWARD = 1;
        BACKWARD = 2;
	}
	MotorDirection direction = 1;
	double speed = 2;
}

message GpioConfigurationReply {
	repeated GpioConfiguration pins = 1;
}
message GpioConfiguration {
	string bcmPin = 1;
	string capabilities = 2;
}

message GpioStateReply {
	int32 serial = 1;
	repeated double motorPower = 2;
}

message UnitConfigurationReply {
	repeated int32 motorOrientation = 1;
}

message MotionConfigurationMessage {
	repeated MotorConfigurationMessage motors = 1;
	SerialConfigurationMessage serial = 2;
}

message MotorConfigurationMessage {
    int32 PwmGpioPin = 1;
    int32 ForwardBit = 2;
    int32 BackwardBit = 3;
    double Buffer = 4;
    double DeadZone = 5;
    double BoostFactor = 6;
}

message SerialConfigurationMessage {
	int32 dataPin = 1;
	int32 latchPin = 2;
	int32 clockPin = 3;
}